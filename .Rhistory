View(Brown_subset)
?wordcloud
install.packages("wordcloud")
library(wordcloud)
install.packages("wordcloud")
?wordcloud
wordcloud(Brown_subset$type, Brown_subset$f)
wordcloud(Brown_subset$type, Brown_subset$f,random.order=FALSE)
Brown_subset <- Brown.tfl[order(Brown.tfl$f, decreasing=TRUE),][1:300,]
wordcloud(Brown_subset$type, Brown_subset$f,random.order=FALSE)
?brewer.pal
wordcloud(Brown_subset$type,
Brown_subset$f,
scale=c(10,1),
color=brewer.pal(8,'Dark2'),
random.order=FALSE,
random.color=TRUE,
rot.per=.3)
wordcloud(Brown_subset$type,
Brown_subset$f,
scale=c(5,1),
color=brewer.pal(8,'Dark2'),
random.order=FALSE,
random.color=TRUE,
rot.per=.3)
Brown_subset <- Brown.tfl[order(Brown.tfl$f, decreasing=TRUE),][1:200,]
wordcloud(Brown_subset$type,
Brown_subset$f,
scale=c(7,1),
color=brewer.pal(8,'Dark2'),
random.order=FALSE,
random.color=TRUE,
rot.per=.3)
Brown_subset <- Brown.tfl[order(Brown.tfl$f, decreasing=TRUE),][1:150,]
wordcloud(Brown_subset$type,
Brown_subset$f,
scale=c(7,1),
color=brewer.pal(8,'Dark2'),
random.order=FALSE,
random.color=TRUE,
rot.per=.3)
data("housing")
housing
data("crabs")
crabs
?rpart
install.packages("rpart")
?rpart
?cart
library(rpart)
?rpart
str(crabs)
library(rpart)
data("crabs")
head(crabs)
str(crab)
fit <- rpart(sp~sex+FL+RW+CL+CW+BD, data=crabs)
plot(fit)
text(fit, use.n = TRUE)
data("swiss")
swiss
data("infert")
infert
?infert
ggplot(data=infert,aes(x=age, y=case)) + geom_points() + facet_grid(.~education)
ggplot(data=infert,aes(x=age, y=case)) + geom_point() + facet_grid(.~education)
ggplot(data=infert,aes(x=age, y=case)) + geom_point()
detach("package:ProgGUIinR", unload=TRUE)
detach("package:zipfR", unload=TRUE)
data("SOTU")
SOTU
data("quine")
quine
?quine
install.packages("rattle")
library(rpart)
library(rattle)
data("crabs")
head(crabs)
str(crab)
fit <- rpart(sp~sex+FL+RW+CL+CW+BD, data=crabs)
fancyRpartPlot(fit)
library(rattle)
install.packages("rattle")
install.packages("RGtk2")
library(manipulate)
scaled_data <- scale(as.matrix(iris[,-5]))
km <- kmeans(scaled_data, 3)
cluster <- as.factor(km$cluster)
ggplot(data=iris, aes(x=Sepal.Length, y=Sepal.Width, color=cluster, shape=Species)) +
geom_point(size=5)
?"manipulate"
?subset
manipulate(ggplot(data=subset(iris, Species==x), aes(x=Sepal.Length, y=Sepal.Width, color=cluster, shape=Species)) +
geom_point(size=5), x=picker(levels(iris$Species)))
iris
subset(iris, Species=='virginica')
?picker
library(manipulate)
manipulate(ggplot(data=subset(iris, Species==x), aes(x=Sepal.Length, y=Sepal.Width, color=cluster, shape=Species)) +
geom_point(size=5), x=picker(as.list(levels(iris$Species))))
manipulate(ggplot(data=subset(iris, Species==pick), aes(x=Sepal.Length, y=Sepal.Width, color=cluster, shape=Species)) +
geom_point(size=5), pick=picker(levels(iris$Species)))
manipulate(ggplot(data=subset(iris, Species==pick), aes(x=Sepal.Length, y=Sepal.Width, color=cluster, shape=Species)) +
geom_point(size=5), pick=picker(as.list(levels(iris$Species))))
manipulate(ggplot(data=iris[iris$Species==pick,], aes(x=Sepal.Length, y=Sepal.Width, color=cluster[iris$Species==pick], shape=Species)) +
geom_point(size=5), pick=picker(as.list(levels(iris$Species))))
manipulate(ggplot(data=iris[iris$Species==pick,], aes(x=Sepal.Length, y=Sepal.Width, color=cluster[iris$Species==pick], shape=Species)) +
geom_point(size=5), pick=picker(as.list(levels(iris$Species))))
scaled_data <- scale(as.matrix(iris[,-5]))
km <- kmeans(scaled_data, 3)
iris$cluster <- as.factor(km$cluster)
ggplot(data=iris, aes(x=Sepal.Length, y=Sepal.Width, color=cluster, shape=Species)) +
geom_point(size=5)
manipulate(ggplot(data=iris[iris$Species==pick,], aes(x=Sepal.Length, y=Sepal.Width, color=cluster, shape=Species)) +
geom_point(size=5), pick=picker(as.list(levels(iris$Species))))
ggplot(data=iris, aes(x=Sepal.Length, y=Sepal.Width, color=cluster, shape=Species)) +
geom_point(size=5)
install.packages("rattle")
library(rpart)
library(rattle)
data("crabs")
head(crabs)
str(crabs)
fit <- rpart(sp~sex+FL+RW+CL+CW+BD, data=crabs)
fancyRpartPlot(fit)
install.packages("rpart.plot")
fancyRpartPlot(fit)
help(crabs)
data("crabs")
head(crabs)
str(crabs)
library(rpart)
library(rattle)
data("crabs")
head(crabs)
str(crabs)
fit <- rpart(sp~sex+FL+RW+CL+CW+BD, data=crabs)
fancyRpartPlot(fit)
crabs
library(rattle)
detach("package:datasets", unload=TRUE)
library("datasets", lib.loc="/usr/lib/R/library")
install.packages(c("curl", "git2r", "Rcpp", "rstudioapi"))
library(rpart)
library(rattle)
data("crabs")
data("wine")
wine
data("UCBAdmissions")
UCBAdmissionss
UCBAdmissions
data("occupationalStatus")
occupationalStatus
data("swiss")
swiss
hist(swiss$Infant.Mortality)
swiss$Infant.Mortality <- ifelse(swiss$Infant.Mortality > 20, '> 20', '<= 20')
swiss$Infant.Mortality <- as.factor(swiss$Infant.Mortality)
swiss$Infant.Mortality
fit <- rpart(Infant.Mortality~., data=swiss)
fancyRpartPlot(fit)
head(swiss)
str(swiss)
data("swiss")
head(swiss)
str(swiss)
summary(swiss)
?swiss
2^32
install.packages("rJava")
install.packages("rJava")
getAnywhere(loess)
getAnywhere(simpleLoess)
A <- [1, 3, 5, 7]
A <- c(1, 3, 5, 7)
x <- c(1, 3, 5, 7)
y <- c(14, 17, 19, 20)
fit <- lm(y~x)
summary(fit)
plot(x, y)
?lm
w <- c(1,1,2,2)
fit <- lm(y~x, weights=w)
summary(fit)
w <- c(1,2,2,1)
fit <- lm(y~x, weights=w)
summary(fit)
w <- c(1,3,3,1)
fit <- lm(y~x, weights=w)
summary(fit)
getAnywhere(simpleLoess)
?loess
fit$fitted.values
summary(fit)
NOx <- c(
4.818, 2.849, 3.275, 4.691, 4.255,
5.064, 2.118, 4.602, 2.286, 0.97,
3.965, 5.344, 3.834, 1.99, 5.199,
5.283, 3.752, 0.537, 1.64, 5.055,
4.937, 1.561
)
E <- c(
0.831, 1.045, 1.021, 0.97, 0.825,
0.891, 0.71, 0.801, 1.074, 1.148,
1, 0.928, 0.767, 0.701, 0.807,
0.902, 0.997, 1.224, 1.089, 0.973,
0.98, 0.665
)
df <- data.frame(NOx, E)
library(ggplot2)
ggplot(df, aes(x=E, y=NOx)) + geom_point()
fitted <- c() 4.883507458207042,
3.0036505198096846,
3.581504008817447,
4.703093317546944,
4.816443475790365,
5.286772313920608,
2.5174459362279578,
4.458251893632429,
2.3970356523074834,
1.164188952834408,
4.069296156900236,
5.237074096381448,
3.845165983931203,
2.270420575495141,
4.554869494592644,
5.296532371659808,
4.139222114766056,
0.3611801895051059,
2.1159858307432025,
4.651064715518743,
4.52305675330102,
1.1854090843824068 )
fitted <- c( 4.883507458207042,
3.0036505198096846,
3.581504008817447,
4.703093317546944,
4.816443475790365,
5.286772313920608,
2.5174459362279578,
4.458251893632429,
2.3970356523074834,
1.164188952834408,
4.069296156900236,
5.237074096381448,
3.845165983931203,
2.270420575495141,
4.554869494592644,
5.296532371659808,
4.139222114766056,
0.3611801895051059,
2.1159858307432025,
4.651064715518743,
4.52305675330102,
1.1854090843824068 )
df <- data.frame(NOx, E, fitted)
?order
df[sort(df$E)]
df[sort(df$E),]
df
?sort
df[order(df$E),]
df <- df[order(df$E),]
plot(df$E, df$NOx)
lines(df$E, df$fitted)
fit <- loess(NOx~E, df)
fit$fitted
df$fitted2 <- fit$fitted
df
?loess
df$fitted3 <- c( 4.883507458207042,
3.0036505198096846,
3.581504008817447,
4.703093317546944,
4.816443475790365,
5.286772313920608,
2.5174459362279578,
4.458251893632429,
2.3970356523074834,
1.164188952834408,
4.069296156900236,
5.237074096381448,
3.845165983931203,
2.270420575495141,
4.554869494592644,
5.296532371659808,
4.139222114766056,
0.3611801895051059,
2.1159858307432025,
4.651064715518743,
4.52305675330102,
1.1854090843824068
)
View(df)
E
df$E
df$NOx
NOx <- c(1.561, 1.990, 2.118, 3.834, 4.602,
5.199, 4.255, 4.818, 5.064, 5.283,
5.344, 4.691, 5.055, 4.937, 3.752,
3.965, 3.275, 2.849, 2.286, 1.640,
0.970, 0.537)
E <- c(0.665, 0.701, 0.710, 0.767, 0.801,
0.807, 0.825, 0.831, 0.891, 0.902,
0.928, 0.970, 0.973, 0.980, 0.997,
1.000, 1.021, 1.045, 1.074, 1.089,
1.148, 1.224)
fitted1 <- c(1.1854090843819023,
2.270420575469771,
2.517445936190846,
3.84516598393094,
4.458251893601577,
4.554869494584246,
4.81644347575353,
4.883507458227967,
5.286772314021661,
5.296532371690162,
5.237074096361795,
4.703093317684974,
4.651064715517663,
4.523056753298107,
4.1392221148822586,
4.069296156987548,
3.581504008787263,
3.0036505197629086,
2.3970356523223515,
2.1159858307344557,
1.1641889528172484,
0.36118018951908226)
plot(E, NOx)
lines(E, fitted1, col='red')
fitted2 <- c(1.1854090843819023,
2.270420575469771,
2.517445936190846,
3.84516598393094,
4.458251893601577,
4.554869494584246,
4.81644347575353,
4.883507458227967,
5.286772314021661,
5.296532371690162,
5.237074096361795,
4.703093317684974,
4.651064715517663,
4.523056753298107,
4.1392221148822586,
4.069296156987548,
3.581504008787263,
3.0036505197629086,
2.3970356523223515,
2.1159858307344557,
1.1641889528172484,
0.36118018951908226)
lines(E, fitted2, col='blue')
fitted2 <- c(1.188631153897667,
2.2664706804482364,
2.51189420672965,
3.8344749514801606,
4.439461063475399,
4.547341382358667,
4.8107602550394475,
4.878423928025562,
5.292488812791859,
5.298509391530871,
5.23957884408766,
4.702346685241267,
4.6498222777565275,
4.516594970690832,
4.161789387042759,
4.083874672389356,
3.5754868647277362,
3.0002679749580334,
2.380353479304439,
2.0961029249426666,
1.1438763518537058,
0.3944651132078576)
plot(E, NOx)
lines(E, fitted1, col='red')
lines(E, fitted2, col='blue')
fitted2 - fitted1
fitted3 <- loess(NOx~E)$fitted
fitted3 - fitted1
fitted4 <- c(1.1710998128392482,
2.273133313772753,
2.522722858169189,
3.855220987303504,
4.457626690578579,
4.550865292102557,
4.80751359134441,
4.882929267184402,
5.288956201191425,
5.300577528056365,
5.237074096536304,
4.700165268001982,
4.650997237709376,
4.522177426144239,
4.139789230226043,
4.072303420223761,
3.598109521197216,
3.0355436669696214,
2.455809467467521,
2.1786850027923883,
1.206925536543519,
0.3049905773658139)
fitted3 - fitted4
NOx <- c(    1.561, 1.990, 2.118, 3.834, 4.602,
5.199, 4.255, 4.818, 5.064, 5.283,
5.344, 4.691, 5.055, 4.937, 3.752,
3.965, 3.275, 2.849, 2.286, 1.640,
0.970, 0.537)
E <- c(    0.665, 0.701, 0.710, 0.767, 0.801,
0.807, 0.825, 0.831, 0.891, 0.902,
0.928, 0.970, 0.973, 0.980, 0.997,
1.000, 1.021, 1.045, 1.074, 1.089,
1.148, 1.224)
fitted <- c(1.3068681451778303,
2.231920526568274,
2.4725143388413358,
3.8555161826479463,
4.513306741112999,
4.605045057122595,
4.798026929344637,
4.824188955840107,
5.206883604399259,
5.255319066725818,
5.3129779397509935,
4.768251048688711,
4.695109473572728,
4.54075125664059,
4.165252315615859,
4.097406657994725,
3.5423169650618718,
2.8689294437767643,
2.1609986230591005,
1.8530264829923766,
0.9683317516407186,
0.5349665118158669)
ci <- c(0.34265300024353174,
0.35987533554902285,
0.3626738994597705,
0.36388506217385885,
0.3364765666151487,
0.3382993095612405,
0.34354753435040974,
0.33818908867140757,
0.29899209739321814,
0.2800424290681831,
0.23332943964570022,
0.2737462126381742,
0.281560064192831,
0.290482183831338,
0.2914367046362859,
0.29019837015342514,
0.2978809698560952,
0.2764354936772241,
0.2390348905284613,
0.21909273881383434,
0.1673899457010321,
0.13526533572004762)
plot(E, NOx)
lines(E, fitted, col='red', lwd=2)
lines(E, fitted-ci, col='blue')
lines(E, fitted+ci, col='blue')
lines(E, fitted+2*ci, col='blue')
lines(E, fitted-2*ci, col='blue')
install.packages("Hmisc")
library(Hmisc)
?wtvar
?wt.var
?wtd.var
getAnywhere(wtd.var)
getAnywhere(lm)
getAnywhere(lm.wfit
)
?lm.wfit
rm(ci)
halfwidth <- c(0.47330572732425313,
0.4939463625043558,
0.49712570133536194,
0.49587492172558173,
0.46140005751294183,
0.46493279108344243,
0.4752360592452953,
0.4677572956008529,
0.40519900758231925,
0.38042151395047286,
0.318708786288554,
0.3706842833379394,
0.380936592356076,
0.39275165883869834,
0.3926651306805628,
0.39091727882430954,
0.4018370689197388,
0.37289679252889324,
0.3224959332600487,
0.29549330511662364,
0.22740769704641278,
0.18762847480842482)
plot(E, NOx)
lines(E, fitted-halfwidth, col='blue')
lines(E, fitted, col='red', lwd=2)
lines(E, fitted+halfwidth, col='blue')
getwd()
setwd('../GitHub/scrapping-LTA/')
library(jsonlite)
dat <- fromJSON('data.json')
View(dat)
dat <- dat[,-2]
?write.csv
write.csv(dat, 'data.csv')
write.csv(dat, 'data.csv', row.names=FALSE)
